'use strict'

function makeTiming({parentPerformance = undefined} = {}) {
  const performance = parentPerformance || {}

  function timeItAsync(name, f) {
    const start = Date.now()

    return f().then(
      v => ((performance[name] = (performance[name] || 0) + Date.now() - start), v),
      v => ((performance[name] = (performance[name] || 0) + Date.now() - start), Promise.reject(v)),
    )
  }

  function timeIt(name, f) {
    const start = Date.now()
    try {
      const ret = f()

      performance[name] = (performance[name] || 0) + Date.now() - start

      return ret
    } catch (err) {
      performance[name] = (performance[name] || 0) + Date.now() - start
      throw err
    }
  }

  return {
    timeItAsync,
    timeIt,
    performance,
  }
}

module.exports = {
  makeTiming,
}
